generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model job_category {
  id              Int               @id @default(autoincrement())
  name            String?           @db.VarChar(255)
  iconUrl         String?           @db.VarChar(3000)
  job_cat_banner  job_cat_banner[]
  job_subcategory job_subcategory[]
  popular_service popular_service[]
  related_service related_service[]
}

model job_subcategory {
  id           Int           @id @default(autoincrement())
  job_cat_id   Int?
  name         String?       @db.VarChar(255)
  img          String?       @db.VarChar(3000)
  job_category job_category? @relation(fields: [job_cat_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "job_subcategory_ibfk_1")
  service      service[]

  @@index([job_cat_id], map: "job_cat_id")
}

model popular_service {
  id           Int           @id @default(autoincrement())
  job_cat_id   Int?
  name         String?       @db.VarChar(255)
  img          String?       @db.VarChar(3000)
  job_category job_category? @relation(fields: [job_cat_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "popular_service_ibfk_1")

  @@index([job_cat_id], map: "job_cat_id")
}

model related_service {
  id           Int           @id @default(autoincrement())
  job_cat_id   Int?
  name         String?       @db.VarChar(255)
  job_category job_category? @relation(fields: [job_cat_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "related_service_ibfk_1")

  @@index([job_cat_id], map: "job_cat_id")
}

model job_cat_banner {
  id           Int           @id @default(autoincrement())
  job_cat_id   Int?
  mobile_img   String?       @db.VarChar(3000)
  desktop_img  String?       @db.VarChar(3000)
  bg_color     String?       @db.VarChar(255)
  descrition   String?       @db.VarChar(255)
  job_category job_category? @relation(fields: [job_cat_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "job_cat_banner_ibfk_1")

  @@index([job_cat_id], map: "job_cat_id")
}

model service {
  id              Int              @id @default(autoincrement())
  job_subcat_id   Int?
  name            String?          @db.VarChar(255)
  new             Boolean?
  job             job[]
  job_subcategory job_subcategory? @relation(fields: [job_subcat_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "service_ibfk_1")

  @@index([job_subcat_id], map: "job_subcat_id")
}

model job {
  id                Int         @id @default(autoincrement())
  user_id           Int?
  service_id        Int?
  name              String?     @db.VarChar(255)
  price             Int?
  thumb_url         String?     @db.VarChar(3000)
  long_description  String?     @db.Text
  short_description String?     @db.Text
  rating            Int?
  user              user?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "job_ibfk_1")
  service           service?    @relation(fields: [service_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "job_ibfk_2")
  loved_job         loved_job[]

  @@index([service_id], map: "service_id")
  @@index([user_id], map: "user_id")
}

model user {
  id           Int         @id @default(autoincrement())
  name         String?     @db.VarChar(255)
  display_name String?     @db.VarChar(255)
  email        String?     @db.VarChar(255)
  password     String?     @db.VarChar(255)
  birthday     DateTime?   @db.Date
  nationality  String?     @db.VarChar(255)
  gender       Boolean?
  created_at   DateTime?   @default(now()) @db.Timestamp(0)
  avatar       String?     @db.VarChar(3000)
  role         String?     @db.VarChar(255)
  job          job[]
  loved_job    loved_job[]

  @@unique([email, name], map: "UC_User")
}

model loved_job {
  job_id     Int
  user_id    Int
  created_at DateTime? @default(now()) @db.Timestamp(0)
  user       user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "loved_job_ibfk_1")
  job        job       @relation(fields: [job_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "loved_job_ibfk_2")

  @@id([user_id, job_id])
  @@index([job_id], map: "job_id")
}
